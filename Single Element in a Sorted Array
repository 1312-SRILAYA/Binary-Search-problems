class Solution:
    def singleNonDuplicate(self, nums: list[int]) -> int:
        n=len(nums)
        if(n==1):
            return nums[0]
        elif(nums[0]!=nums[1]):
            return nums[0]
        elif(nums[n-1]!=nums[n-2]):
            return nums[n-1]
        low=1
        high=n-2
        while(low<=high):
            mid=(low+high)//2
            if(nums[mid]!=nums[mid-1] and nums[mid]!=nums[mid+1]):
                return nums[mid]
            #you are on the left half so single element in right
            elif((mid%2==1 and nums[mid]==nums[mid-1]) or (mid%2==0 and nums[mid]==nums[mid+1])):
                low=mid+1
            #you are on the right half so single element in left
            elif((mid%2==0 and nums[mid]==nums[mid-1]) or (mid%2==1 and nums[mid]==nums[mid+1])):
                high=mid-1
        